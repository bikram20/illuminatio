# Create 1 block of specification per test case.

# src_type: pod, namespace
# src_namespace: namespace name
# src_selector: A dict of labels (and condition)
# dest_type: pod, namespace, or cidr
# dest_namespace: namespace name. It is blank of destination is external.
# dest_selector: A dict of labels (and condition), or cidr
# ports: '*' or a single port
# action: allow, or deny

---

src_type: pod
src_namespace: default 
src_selector: {api: "web"}
dest_type: pod
dest_namespace: default
dest_selector: {api: "web"}
ports: '*'
action: deny

---


src_type: pod
src_namespace: default 
src_selector: {'illuminatio-inverted-app': 'bookstore'}
dest_type: pod
dest_namespace: default
dest_selector: {'app': 'bookstore', 'role': 'api'}
ports: '*'
action: deny

---


src_type: pod
src_namespace: illuminatio-inverted-default 
src_selector: {'app': 'bookstore'}
dest_type: pod
dest_namespace: default
dest_selector: {'app': 'bookstore', 'role': 'api'}
ports: '*'
action: deny

---

src_type: pod
src_namespace: default 
src_selector: {'app': 'bookstore'}
dest_type: pod
dest_namespace: default
dest_selector: {'app': 'bookstore', 'role': 'api'}
ports: '*'
action: allow

---

src_type: namespace
src_namespace: {}
src_selector: {}
dest_type: pod
dest_namespace: default
dest_selector: {'app': 'web'}
ports: '*'
action: allow

---

src_type: namespace
src_namespace: {'illuminatio-inverted-purpose': 'production'} 
src_selector: {}
dest_type: pod
dest_namespace: default
dest_selector: {app: "web"}
ports: '*'
action: deny

---

src_type: namespace
src_namespace: {'purpose': 'production'} 
src_selector: {}
dest_type: pod
dest_namespace: default
dest_selector: {app: "web"}
ports: '*'
action: allow

---

src_type: pod
src_namespace: default 
src_selector: {app: "foo"}
dest_type: namespace
dest_namespace: {}
dest_selector: {}
ports: '53'
action: allow

---
